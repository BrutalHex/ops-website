
name: Publish Helm Chart
on:
  workflow_call:
    secrets:
      OPS_TOKEN:
        required: true
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Package Helm Chart
        run: |
          helm package ./myapp
          echo "CHART_PACKAGE=$(ls *.tgz)" >> $GITHUB_ENV

      - name: Extract Chart Name and Version
        id: chart-info
        run: |
          CHART_NAME=$(grep '^name:' ./myapp/Chart.yaml | awk '{print $2}')
          CHART_VERSION=$(grep '^version:' ./myapp/Chart.yaml | awk '{print $2}')
          RELEASE_NAME="${CHART_NAME}-${CHART_VERSION}"
          echo "CHART_NAME=${CHART_NAME}" >> $GITHUB_ENV
          echo "CHART_VERSION=${CHART_VERSION}" >> $GITHUB_ENV
          echo "RELEASE_NAME=${RELEASE_NAME}" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.OPS_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_NAME }}
          release_name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: false

      - name: Upload Helm Package to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.OPS_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./${{ env.CHART_PACKAGE }}
          asset_name: ${{ env.CHART_PACKAGE }}
          asset_content_type: application/gzip

      - name: Checkout gh-pages Branch
        run: |
          git checkout gh-page || git checkout -b gh-page
          git pull origin gh-page --allow-unrelated-histories || true

      - name: Generate Helm Repository Index
        run: |
          mkdir -p .cr-release-packages
          mv ${{ env.CHART_PACKAGE }} .cr-release-packages/
          helm repo index . --url https://github.com/${{ github.repository }}/releases/download/${{ env.RELEASE_NAME }}/ --merge index.yaml
          sed -i 's|/\.cr-release-packages||g' index.yaml
          echo "<html><body><h1>Helm Repository Index</h1><pre>$(cat index.yaml)</pre></body></html>" > index.html

      - name: Commit and Push Helm Repository Index
        run: |
          git add index.yaml index.html
          git commit -m "Update Helm repository index for ${{ env.RELEASE_NAME }}" || echo "No changes to commit"
          git push origin gh-page
